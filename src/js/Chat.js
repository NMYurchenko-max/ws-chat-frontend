//Chat.js: –§–∞–π–ª –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ª–æ–≥–∏–∫–∏ —á–∞—Ç–∞.
import ChatAPI from './api/ChatAPI';
import createRequest from './api/createRequest';

export default class Chat {
  /**
   * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ ChatAPI.
   * @param {HTMLElement} container - DOM —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞ —á–∞—Ç–∞.
   */
  constructor(container) {
    this.container = container;
    this.api = new ChatAPI();
    this.user = null;
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞: —Ä–µ–Ω–¥–µ—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π.
   */
  init() {
    this.renderModal();
    this.registerEvents();
  }

  /**
   * –†–µ–Ω–¥–µ—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∏–∫–Ω–µ–π–º–∞.
   */
  renderModal() {
    this.container.innerHTML = `
      <div class="modal__form active" id="modal">
        <div class="modal__background"></div>
        <div class="modal__content">
          <div class="modal__header" style="background-color: #4B53D0; color: white;">–ü—Ä–∏–≤–µ—Ç! –ñ–¥—ë—Ç–µ –≤–æ–ª–Ω—É –ø–æ–∑–∏—Ç–∏–≤–∞ - –≤–∞–º —Å—é–¥–∞!</div>
          <div class="modal__body">
            <div class="form__group">
              <input type="text" id="nickname" class="form__input" placeholder="–í–≤–µ–¥–∏—Ç–µ –ù–∏–∫–Ω–µ–π–º" />
              <div class="form__hint" id="hint"></div>
            </div>
          </div>
          <div class="modal__footer">
          <button class="modal__register" id="registerBtn">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</button>
          <button class="modal__ok" id="okBtn">–í–æ–π—Ç–∏</button>
          </div>
        </div>
      </div>
    `;
  }

  /**
   * –†–µ–Ω–¥–µ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ —á–∞—Ç–∞ —Å –æ–±–ª–∞—Å—Ç—å—é —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
   */
  renderChat() {
    console.log('renderChat called - rendering chat window with logout button');
    this.container.innerHTML = `
      <div class="container">
        <div class="chat__userlist-column">
          <h1 class="chat__header">Chat online</h1>
          <div class="chat__userlist" id="userList"></div>
        </div>
        <div class="chat__container">
          <div class="chat__area">
            <div class="chat__messages-container" id="messages"></div>
            <div class="chat__messages-input">
              <input type="text" id="messageInput" class="form__input" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ" />
            </div>
            <div class="chat__buttons">
              <button id="emojiBtn" class="emoji-btn" title="–í—ã–±—Ä–∞—Ç—å —Å–º–∞–π–ª–∏–∫">üòä</button>
              <button id="sendBtn" class="modal__ok">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
              <button id="logoutBtn" class="chat__logout-btn">–í—ã–π—Ç–∏</button>
              <button id="leaveBtn" class="chat__leave-btn">–ü–æ–∫–∏–Ω—É—Ç—å —á–∞—Ç</button>
            </div>
            <div id="emojiPicker" class="emoji-picker hidden"></div>
          </div>
        </div>
      </div>
    `;
    this.renderEmojiPicker();
  }

  /**
   * –†–µ–Ω–¥–µ—Ä –≤—ã–±–æ—Ä–Ω–∏–∫–∞ —Å–º–∞–π–ª–æ–≤.
   */
  renderEmojiPicker() {
    const emojiPicker = this.container.querySelector('#emojiPicker'); // –ù–∞—Ö–æ–¥–∏–º –≤—ã–±–æ—Ä —Å–º–∞–π–ª–æ–≤
    if (!emojiPicker) return; // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã—Ö–æ–¥–∏–º
    const emojis = [
        'üòÄ', 'üòÇ', 'üòç', 'üòé', 'üò¢', 'üò°', 
        'üëç', 'üôè', 'üéâ', 'üíî', 'üî•', 'üåü', 
        'üíØ', 'üéà', 'ü•≥', 'ü§î', 'üòú', 'üòá', 
        'üòª', 'üôå', 'ü§ó', 'üòã', 'ü•∫', 'ü§©', 
        'üíñ', '‚ú®', 'üåà', 'üåª', 'üåº', 'üçÄ',
        'üéä', 'üçï', 'üé∂', '‚òï', 'üç©', 'üåç'
    ];
    emojiPicker.innerHTML = ''; // –û—á–∏—â–∞–µ–º –≤—ã–±–æ—Ä —Å–º–∞–π–ª–æ–≤
    emojis.forEach((emoji) => {
        const span = document.createElement('span'); // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–º–∞–π–ª–∞
        span.classList.add('emoji'); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å
        span.textContent = emoji; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç —Å–º–∞–π–ª–∞
        emojiPicker.appendChild(span); // –î–æ–±–∞–≤–ª—è–µ–º —Å–º–∞–π–ª –≤ –≤—ã–±–æ—Ä
    });
}

  /**
   * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∏–∫–Ω–µ–π–º–∞.
   */
  registerEvents() {
    const modal = this.container.querySelector('#modal'); // –ù–∞—Ö–æ–¥–∏–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const okBtn = this.container.querySelector('#okBtn'); // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É "–í–æ–π—Ç–∏"
    const registerBtn = this.container.querySelector('#registerBtn'); // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"
    const nicknameInput = this.container.querySelector('#nickname'); // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª–µ –¥–ª—è –Ω–∏–∫–Ω–µ–π–º–∞
    const hint = this.container.querySelector('#hint'); // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–æ–∫
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í–æ–π—Ç–∏"
    if (okBtn) {
      okBtn.addEventListener('click', () => {
        const nickname = nicknameInput.value.trim(); // –ü–æ–ª—É—á–∞–µ–º –Ω–∏–∫–Ω–µ–π–º
        if (!nickname) {
          hint.textContent = '–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º'; // –ï—Å–ª–∏ –Ω–∏–∫–Ω–µ–π–º –ø—É—Å—Ç–æ–π, –≤—ã–≤–æ–¥–∏–º –ø–æ–¥—Å–∫–∞–∑–∫—É
          return;
        }
        // –í—Ö–æ–¥: –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ WebSocket –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        this.api
          .connect(nickname)
          .then(() => {
            console.log('Connected to WebSocket - then handler called');
            // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            this.user = { name: nickname };
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            console.log('User set to:', this.user);
            // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            this.renderChat(); // –†–µ–Ω–¥–µ—Ä–∏–º –æ–∫–Ω–æ —á–∞—Ç–∞
            this.subscribeOnEvents(); // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è
            this.bindUIEvents(); // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è UI
          })
          .catch((error) => {
            console.error('Login error:', error); // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            hint.textContent =
              error.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∏–∫–Ω–µ–π–º'; // –í—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
          });
      });
    }
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"
    if (registerBtn) {
      registerBtn.addEventListener('click', () => {
        const nickname = nicknameInput.value.trim(); // –ü–æ–ª—É—á–∞–µ–º –Ω–∏–∫–Ω–µ–π–º
        if (!nickname) {
          hint.textContent = '–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏';
          // –ï—Å–ª–∏ –Ω–∏–∫–Ω–µ–π–º –ø—É—Å—Ç–æ–π, –≤—ã–≤–æ–¥–∏–º –ø–æ–¥—Å–∫–∞–∑–∫—É
          return;
        }
        createRequest(nickname) // –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          .then((user) => {
            console.log('User registered via register button:', user);
            // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
            hint.textContent = '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏—Ç–µ –í–æ–π—Ç–∏.';
            // –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          })
          .catch((error) => {
            console.error('Registration error:', error);
            // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            hint.textContent = error.message || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏';
            // –í—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
          });
      });
    }
  }
  /**
   * –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π UI –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
   */
  bindUIEvents() {
    const sendBtn = this.container.querySelector('#sendBtn'); // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"
    const messageInput = this.container.querySelector('#messageInput'); // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    const logoutBtn = this.container.querySelector('#logoutBtn'); // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É "–í—ã–π—Ç–∏"
    const emojiBtn = this.container.querySelector('#emojiBtn'); // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ —Å–º–∞–π–ª–æ–≤
    const emojiPicker = this.container.querySelector('#emojiPicker'); // –ù–∞—Ö–æ–¥–∏–º –≤—ã–±–æ—Ä —Å–º–∞–π–ª–æ–≤
    const leaveBtn = this.container.querySelector('#leaveBtn'); // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∏–Ω—É—Ç—å —á–∞—Ç"
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"
    sendBtn.addEventListener('click', () => {
      this.sendMessage(); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    });
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏ Enter
    messageInput.addEventListener('keydown', (e) => {
      if (e.key === 'Enter') {
        this.sendMessage(); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      }
    });
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Å–º–∞–π–ª–æ–≤
    if (emojiBtn && emojiPicker) {
      emojiBtn.addEventListener('click', () => {
        emojiPicker.classList.toggle('hidden'); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–ª–∏ —Å–∫—Ä—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —Å–º–∞–π–ª–æ–≤
      });
      emojiPicker.addEventListener('click', (e) => {
        if (e.target.classList.contains('emoji')) {
          // –ï—Å–ª–∏ –∫–ª–∏–∫–Ω—É–ª–∏ –ø–æ —Å–º–∞–π–ª—É
          const emoji = e.target.textContent; // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–º–∞–π–ª–∞
          messageInput.value += emoji; // –î–æ–±–∞–≤–ª—è–µ–º —Å–º–∞–π–ª –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
          emojiPicker.classList.add('hidden'); // –°–∫—Ä—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —Å–º–∞–π–ª–æ–≤
          messageInput.focus(); // –°—Ç–∞–≤–∏–º —Ñ–æ–∫—É—Å –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        }
      });
    }
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í—ã–π—Ç–∏"
    if (logoutBtn) {
      logoutBtn.addEventListener('click', () => {
        if (this.api.socket) {
          this.api.send({
            type: 'disconnect', // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏
            user: this.user,
          });
          this.api.socket.close(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–∫–µ—Ç
        }
        this.user = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.renderModal(); // –†–µ–Ω–¥–µ—Ä–∏–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.registerEvents(); // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è
      });
    }
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∏–Ω—É—Ç—å —á–∞—Ç"
    if (leaveBtn) {
      leaveBtn.addEventListener('click', () => {
        if (this.api.socket) {
          this.api.send({
            type: 'exit', // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ
            user: this.user,
          });
          this.api.socket.close(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–∫–µ—Ç
        }
        this.user = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.renderModal(); // –†–µ–Ω–¥–µ—Ä–∏–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.registerEvents(); // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è
      });
    }
  }

  /**
   * –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è WebSocket —á–µ—Ä–µ–∑ ChatAPI.
   */
  subscribeOnEvents() {
    this.api.onMessage((data) => {
      this.renderMessage(data); // –†–µ–Ω–¥–µ—Ä–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    });
    this.api.onUsersUpdate((users) => {
      this.renderUserList(users); // –†–µ–Ω–¥–µ—Ä–∏–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    });
  }
  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ ChatAPI.
   */
  sendMessage() {
    const messageInput = this.container.querySelector('#messageInput');
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    const message = messageInput.value.trim(); // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    if (!message) return; // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ, –≤—ã—Ö–æ–¥–∏–º
    this.api.sendMessage(message, this.user); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    messageInput.value = ''; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
  }

  /**
   * –†–µ–Ω–¥–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ–∫–Ω–µ —á–∞—Ç–∞.
   * @param {Object} data - –î–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
   */
  renderMessage(data) {
    const messagesContainer = this.container.querySelector('#messages');
    // –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
    if (!messagesContainer) return; // –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã—Ö–æ–¥–∏–º
    const isOwnMessage = data.user.name === this.user.name;
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    const messageContainer = document.createElement('div');
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
    messageContainer.classList.add('message__container');
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É —Å–æ–æ–±—â–µ–Ω–∏—è
    messageContainer.classList.add(
      isOwnMessage
        ? 'message__container-yourself'
        // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        : 'message__container-interlocutor'
      // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    );
    const header = document.createElement('div');
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    header.classList.add('message__header');
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –∑–∞–≥–æ–ª–æ–≤–∫—É
    const date = new Date(data.timestamp || Date.now());
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É —Å–æ–æ–±—â–µ–Ω–∏—è
    const formattedDate = date.toLocaleString('ru-RU', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
    });
    header.textContent = isOwnMessage
      ? `You, ${formattedDate}`
      : // –§–æ—Ä–º–∞—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ –¥–ª—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        `${data.user.name}, ${formattedDate}`;
    // –§–æ—Ä–º–∞—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const messageBody = document.createElement('div');
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    messageBody.textContent = data.message;
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    messageContainer.appendChild(header);
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
    messageContainer.appendChild(messageBody);
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    messagesContainer.appendChild(messageContainer);
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
    messagesContainer.scrollTop = messagesContainer.scrollHeight;
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤–Ω–∏–∑
  }

  /**
   * –†–µ–Ω–¥–µ—Ä —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –æ–∫–Ω–µ —á–∞—Ç–∞.
   * @param {Array} users - –ú–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
   */
  renderUserList(users) {
    const userList = this.container.querySelector('#userList');
    // –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if (!userList) return; // –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã—Ö–æ–¥–∏–º
    userList.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    users.forEach((user) => {
      const userDiv = document.createElement('div');
      // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      userDiv.classList.add('chat__user'); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      if (this.user && user.name === this.user.name) {
        userDiv.textContent = `${user.name} (You)`; // –ï—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        userDiv.classList.add('chat__user-yourself'); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è
      } else {
        userDiv.textContent = user.name; // –ï—Å–ª–∏ —ç—Ç–æ –¥—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      }
      userList.appendChild(userDiv); // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫
    });
  }
}
